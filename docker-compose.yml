services:
   nginx:
     image: nginx:latest
     container_name: nginx
     ports:
       - "80:80"
       - "443:443"
     volumes:
       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
       - ./server/staticfiles:/backend_root/staticfiles
       - ./certbot/conf:/etc/letsencrypt
       - ./certbot/www:/var/www/certbot
     depends_on:
       - backend
       - frontend
     restart: unless-stopped

   frontend:
     build:
       context: frontend/
       dockerfile: Dockerfile
     image: frontend
     container_name: frontend
     restart: unless-stopped
     ports:
       - "3000:3000"

   backend:
      build:
        context: server/
        dockerfile: Dockerfile
      image: backend
      command: sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn server.wsgi:application --bind 0.0.0.0:7000"
      container_name: backend
      restart: unless-stopped
      volumes:
        - ./server/staticfiles:/backend_root/staticfiles
      depends_on:
        - postgres_db
      ports:
        - "7000:7000"

   schedules:
     build:
       context: server/
       dockerfile: Dockerfile
     image: schedules
     command: "python3 scraper/schedules.py"
     container_name: schedules
     restart: unless-stopped

   rabbitmq:
      image: rabbitmq
      ports:
        - "5672:5672"
      container_name: rabbitmq
      restart: unless-stopped
      environment:
        - RABBITMQ_DEFAULT_USER=rmuser
        - RABBITMQ_DEFAULT_PASS=rmpassword

   postgres_db:
      image: postgres:13.3
      container_name: postgres_db
      command:
        - "postgres"
        - "-c"
        - "max_connections=1000"
        - "-c"
        - "shared_buffers=1GB"
      environment:
        POSTGRES_DB: "shop"
        POSTGRES_USER: "user"
        POSTGRES_PASSWORD: "database_password"
        PGDATA: "/var/lib/postgresql/data/pgdata"
      ports:
        - "5432:5432"
      volumes:
        - postgres_db_data:/var/lib/postgresql/data
      restart: unless-stopped

#   certbot:
#        image: certbot/certbot
#        container_name: certbot
#        volumes:
#          - ./certbot/conf:/etc/letsencrypt
#          - ./certbot/www:/var/www/certbot
#        command: certonly --webroot -w /var/www/certbot --force-renewal --email murat.muhiddin96@gmail.com -d kidsland-store.com --agree-tos
#        depends_on:
#          - nginx


volumes:
  postgres_db_data:
